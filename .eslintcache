[{"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/index.tsx":"1","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/reportWebVitals.ts":"2","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/App.tsx":"3","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/store/index.ts":"4","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Background.tsx":"5","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/reducers/RootReducer.ts":"6","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/reducers/StarwarsReducer.ts":"7","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Navigation/Navigation.tsx":"8","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/routes/index.tsx":"9","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/views/Dashboard/Dashboard.tsx":"10","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/routes/Router.tsx":"11","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Dashboard/Card/Card.tsx":"12","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Dashboard/Card/CardContainer.tsx":"13","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/views/Statistic/Statistic.tsx":"14","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Dashboard/BaseButton.tsx":"15","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Lang.tsx":"16","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/i18n/index.ts":"17","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Dashboard/Card/CirclePoints.tsx":"18","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Dashboard/ButtonBottom/ButtonBottom.tsx":"19","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Dashboard/Card/CardItemInside.tsx":"20","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/reducers/SelectReducer.ts":"21","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/actions/Select/SelectActions.ts":"22","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/actions/Select/SelectActionsType.ts":"23","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/actions/StarWars/StarwarsActions.ts":"24","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/actions/StarWars/StarwarsActionsType.ts":"25","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/utils/utils.ts":"26"},{"size":607,"mtime":1611736504369,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1611594977529,"results":"29","hashOfConfig":"28"},{"size":666,"mtime":1611697613354,"results":"30","hashOfConfig":"28"},{"size":367,"mtime":1611604723110,"results":"31","hashOfConfig":"28"},{"size":2477,"mtime":1611695248028,"results":"32","hashOfConfig":"28"},{"size":257,"mtime":1611741438569,"results":"33","hashOfConfig":"28"},{"size":1799,"mtime":1611749279032,"results":"34","hashOfConfig":"28"},{"size":413,"mtime":1611698448727,"results":"35","hashOfConfig":"28"},{"size":592,"mtime":1611689194533,"results":"36","hashOfConfig":"28"},{"size":570,"mtime":1611700398950,"results":"37","hashOfConfig":"28"},{"size":417,"mtime":1611506220552,"results":"38","hashOfConfig":"28"},{"size":4947,"mtime":1611746185627,"results":"39","hashOfConfig":"28"},{"size":1936,"mtime":1611746185687,"results":"40","hashOfConfig":"28"},{"size":566,"mtime":1611695510530,"results":"41","hashOfConfig":"28"},{"size":1237,"mtime":1611738233048,"results":"42","hashOfConfig":"28"},{"size":1257,"mtime":1611698369582,"results":"43","hashOfConfig":"28"},{"size":485,"mtime":1611697985026,"results":"44","hashOfConfig":"28"},{"size":717,"mtime":1611702581731,"results":"45","hashOfConfig":"28"},{"size":1735,"mtime":1611748442193,"results":"46","hashOfConfig":"28"},{"size":534,"mtime":1611734082306,"results":"47","hashOfConfig":"28"},{"size":739,"mtime":1611746084707,"results":"48","hashOfConfig":"28"},{"size":543,"mtime":1611741008823,"results":"49","hashOfConfig":"28"},{"size":486,"mtime":1611741008875,"results":"50","hashOfConfig":"28"},{"size":4260,"mtime":1611749279056,"results":"51","hashOfConfig":"28"},{"size":1917,"mtime":1611749279004,"results":"52","hashOfConfig":"28"},{"size":98,"mtime":1611749598229,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"zadg4j",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/index.tsx",[],["110","111"],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/reportWebVitals.ts",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/App.tsx",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/store/index.ts",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Background.tsx",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/reducers/RootReducer.ts",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/reducers/StarwarsReducer.ts",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Navigation/Navigation.tsx",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/routes/index.tsx",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/views/Dashboard/Dashboard.tsx",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/routes/Router.tsx",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Dashboard/Card/Card.tsx",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Dashboard/Card/CardContainer.tsx",["112"],"import { CardExt } from \"./Card\";\nimport React, { useState, useEffect }  from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport { RootStoreType } from \"../../../store\";\nimport { StarwarsPeopleMass, StarwarsStarshipCrew } from \"../../../actions/StarwarsActionsType\";\n\n\nexport const CardContainer: React.FC = () => {\n\n  const { t } = useTranslation()\n\n  const starwarsState = useSelector((state: RootStoreType) => state.starwars)\n\n  const [firstPlayer, setFirstPlayer] = useState<StarwarsPeopleMass | StarwarsStarshipCrew | undefined>(undefined)\n  const [secondPlayer, setSecondPlayer] = useState<StarwarsPeopleMass | StarwarsStarshipCrew | undefined>(undefined)\n\n  useEffect(() => {\n    if (starwarsState.firstPlayer && starwarsState.secondPlayer) {\n      setFirstPlayer(starwarsState.firstPlayer)\n      setSecondPlayer(starwarsState.secondPlayer)\n    }\n  }, [starwarsState])\n\n\n  return (\n    <CardContainerStyle>\n      <CardExt\n        isActive={false}\n        position={'left'}\n        player={firstPlayer}\n       />\n      <VSStyle>vs</VSStyle>\n      <CardExt\n        isActive={false}\n        position={'right'}\n        player={secondPlayer}\n      />\n    </CardContainerStyle>\n )\n}\n\nconst CardContainerStyle = styled.div`\n  width: 100%;\n  height: 350px;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst VSStyle = styled.div`\n  color: yellow;\n  font-size: 8rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Old versions of Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome, Edge, Opera and Firefox */\n`\n","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/views/Statistic/Statistic.tsx",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Dashboard/BaseButton.tsx",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Lang.tsx",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/i18n/index.ts",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Dashboard/Card/CirclePoints.tsx",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Dashboard/ButtonBottom/ButtonBottom.tsx",["113"],"import React, {useEffect} from \"react\";\nimport {BaseButton} from \"../BaseButton\";\nimport {Link} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {GetAllResources, GetTwoStarwarsPlayer} from \"../../../actions/StarWars/StarwarsActions\";\nimport {RootStoreType} from \"../../../store\";\n\nexport const ButtonBottom: React.FC = () => {\n\n  const dispatch = useDispatch()\n\n  const starwarsState = useSelector((state: RootStoreType) => state.starwars)\n  const selectState = useSelector((state: RootStoreType) => state.select)\n\n  const generateRandomPlayer = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): Promise<any> => {\n    e.preventDefault()\n\n    const {firstSelect, secondSelect} = selectState\n\n    await dispatch(GetAllResources())\n    await dispatch(GetTwoStarwarsPlayer({firstPlayerType: firstSelect, secondPlayerType: secondSelect}))\n  }\n\n  useEffect(() => {\n    if ((starwarsState.message && starwarsState.message === 'Not found') || starwarsState.message === 'CORS') {\n      const {firstSelect, secondSelect} = selectState\n\n\n      dispatch(GetTwoStarwarsPlayer({firstPlayerType: firstSelect, secondPlayerType: secondSelect}))\n    }\n  }, [starwarsState])\n\n  return (\n    <>\n      <BaseButton\n        fontColor={'black'}\n        backgroundColor={'yellow'}\n        position={'left'}\n        percent={50}\n        action={generateRandomPlayer}\n        disabled={starwarsState.loading}\n      >\n        generate random players\n      </BaseButton>\n      <Link to={'/stats'}>\n        <BaseButton\n          fontColor={'white'}\n          backgroundColor={'#8B1FA7'}\n          position={'right'}\n          percent={-6}\n        >\n          history\n        </BaseButton>\n      </Link>\n    </>\n  )\n}\n","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/components/Dashboard/Card/CardItemInside.tsx",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/reducers/SelectReducer.ts",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/actions/Select/SelectActions.ts",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/actions/Select/SelectActionsType.ts",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/actions/StarWars/StarwarsActions.ts",["114","115","116"],"import {Dispatch} from \"redux\";\nimport {\n  STARWARS_FAIL,\n  STARWARS_LOADING, STARWARS_RESOURCES,\n  STARWARS_SUCCESS_PEOPLE,\n  STARWARS_SUCCESS_PLAYERS,\n  STARWARS_SUCCESS_STARSHIP,\n  StarwarsDispatchTypes, StarwarsRequestTwoPlayerType,\n  StarwarsRequestType, StarwarsResourceType\n} from \"./StarwarsActionsType\";\nimport axios from \"axios\";\nimport {getNumberFromUrl} from \"../../utils/utils\";\n\nexport const GetAllResources = () => async (dispatch: Dispatch<StarwarsDispatchTypes>) => {\n\n  try {\n\n    let people: any[] = []\n    let starships: any[] = []\n\n    const peopleAcceptedNumber = await axios.get(`${process.env.REACT_APP_STARWARS_API}/people`)\n      .then( res => {\n        people = res.data.results\n        return res.data.count\n      })\n      .then (count => {\n        const numberOfPagesLeft = Math.ceil((count - 1) / 10);\n        let promises = [];\n        for (let i = 2; i <= numberOfPagesLeft; i++) {\n          promises.push(axios(`${process.env.REACT_APP_STARWARS_API}/people?page=${i}`));\n        }\n        return Promise.all(promises);\n      })\n      .then(response => {\n        people = response.reduce((a, data) => [...a, ...data.data.results], people)\n        return people.map((x: StarwarsResourceType) => getNumberFromUrl(x.url))\n      })\n\n    const starshipsAcceptedNumber = await axios.get(`${process.env.REACT_APP_STARWARS_API}/starships`)\n      .then( res => {\n        starships = res.data.results\n        return res.data.count\n      })\n      .then((count) => {\n        const numberOfPagesLeft = Math.ceil((count - 1) / 10);\n        let promises = [];\n        for (let i = 2; i <= numberOfPagesLeft; i++) {\n          promises.push(axios(`${process.env.REACT_APP_STARWARS_API}/starships?page=${i}`));\n        }\n        return Promise.all(promises);\n      })\n      .then(response => {\n        starships = response.reduce((a, data) => [...a, ...data.data.results], starships)\n        return starships.map((x: StarwarsResourceType) => getNumberFromUrl(x.url))\n      })\n\n    console.log(peopleAcceptedNumber)\n    console.log(starshipsAcceptedNumber)\n\n  } catch (e) {\n    console.error(e)\n  }\n\n  dispatch({\n    type: STARWARS_RESOURCES,\n    payload: {\n      acceptedNumberPeople: [1,2,3,4],\n      acceptedNumberStarships: [1,2,3,4]\n    }\n  })\n\n\n}\n\n\n\nexport const GetTwoStarwarsPlayer = (starwars: StarwarsRequestTwoPlayerType) => async (dispatch: Dispatch<StarwarsDispatchTypes>) => {\n\n  try {\n    dispatch({\n      type: STARWARS_LOADING\n    })\n\n    const selected = ['people', 'starships']\n\n\n    let {firstPlayerType, secondPlayerType} = starwars\n\n    const selectedFirstPlayer = firstPlayerType === 'all' ? selected[Math.round(Math.random() * 1)] : firstPlayerType\n    const selectedSecondPlayer = secondPlayerType === 'all' ? selected[Math.round(Math.random() * 1)] : secondPlayerType\n\n\n    const firstPlayer = await\n      axios.get(`${process.env.REACT_APP_STARWARS_API}/${selectedFirstPlayer}/${Math.round(Math.random() * 80) + 1}`)\n      .then( res => res.data )\n\n    const secondPlayer = await\n      axios.get(`${process.env.REACT_APP_STARWARS_API}/${selectedSecondPlayer}/${Math.round(Math.random() * 30) + 1}`)\n      .then( res => res.data )\n\n    dispatch({\n      type: STARWARS_SUCCESS_PLAYERS,\n      payload: {\n        firstPlayer,\n        secondPlayer\n      }\n    })\n\n  } catch (e) {\n\n    console.log(e)\n\n    dispatch({\n      type: STARWARS_FAIL,\n      payload: {\n        message: e.response ? e.response.data : 'CORS'\n      }\n    })\n  }\n\n}\n\n\nexport const GetStarwars = (starwars: StarwarsRequestType) => async (dispatch: Dispatch<StarwarsDispatchTypes>) => {\n\n  const { player, id } = starwars\n\n  try {\n    dispatch({\n      type: STARWARS_LOADING\n    })\n\n    const response = await axios.get(`${process.env.REACT_APP_STARWARS_API}/${player}/${id}`)\n      .then( res => res.data )\n\n    if (player === 'people') {\n      dispatch({\n        type: STARWARS_SUCCESS_PEOPLE,\n        payload: {\n          people: response\n        }\n      })\n    } else {\n      dispatch({\n        type: STARWARS_SUCCESS_STARSHIP,\n        payload: {\n          starship: response\n        }\n      })\n    }\n\n  } catch (e) {\n\n    dispatch({\n      type: STARWARS_FAIL,\n      payload: {\n        message: e.message\n      }\n    })\n    console.error(e.body)\n  }\n}\n","/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/actions/StarWars/StarwarsActionsType.ts",[],"/home/pieras/WebstormProjects/swapi-rekrutacja-web/src/utils/utils.ts",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":12,"column":11,"nodeType":"123","messageId":"124","endLine":12,"endColumn":12},{"ruleId":"125","severity":1,"message":"126","line":31,"column":6,"nodeType":"127","endLine":31,"endColumn":21,"suggestions":"128"},{"ruleId":"121","severity":1,"message":"129","line":9,"column":24,"nodeType":"123","messageId":"124","endLine":9,"endColumn":44},{"ruleId":"121","severity":1,"message":"130","line":12,"column":9,"nodeType":"123","messageId":"124","endLine":12,"endColumn":25},{"ruleId":"121","severity":1,"message":"131","line":40,"column":11,"nodeType":"123","messageId":"124","endLine":40,"endColumn":20},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"@typescript-eslint/no-unused-vars","'t' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'selectState'. Either include them or remove the dependency array.","ArrayExpression",["134"],"'StarwarsResourceType' is defined but never used.","'getNumberFromUrl' is defined but never used.","'starships' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [dispatch, selectState, starwarsState]",{"range":"137","text":"138"},[1187,1202],"[dispatch, selectState, starwarsState]"]